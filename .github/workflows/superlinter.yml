# This is a basic workflow that is manually triggered

name: Github Actions Flow

on: 
  pull_request:
  push: 
    branches: 
      - master
      - develop
      - RN_initTesting
      
jobs:
  super-lint:
    name: Lint code base 
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2       
      - name: Hive Actions
        uses: actions/setup-node@master
      - name: Hive C-Hive
        uses: c-hive/gha-npm-cache@v1

      - name: Install node modules
        run: |
          npm install
      - name: Run test
        run: |
          npm test
        
#       - name: Run Super-Linter
#         uses: github/super-linter@v3
#       - name: Run ESLint
#         uses: reviewdog/action-eslint@v1
#         with:
#           reporter: github-pr-review # Change reporter.
#           eslint_flags: 'src/'
#       - name: Lint Action (Homepage)
#         uses: wearerequired/lint-action@v1.9.0
#       - name: Analyze code statically using ESLint
#         uses: moneyforward/eslint-action@v0
      - name: Run linters (ESLINT)
        uses: wearerequired/lint-action@v1
        with:
          eslint: true
          prettier: true

#       - name: Gradel Clean
#         run: chmod +x ./gradlew
      
      
      - name: Build Android apk (debug)
        run: ./gradlew assembleDebug -Dorg.gradle.logging.level=info
        working-directory: android
      - name: Upload Artifact Release
        uses: actions/upload-artifact@v2
        with:
          name: android-apk
          path: '**/*.apk'
#           name: app-release.apk
#           path: android/app/build/outputs/apk/release/
      - name: Build Android ( Release ) 
        run: |
          cd android && ./gradlew assembleRelease
      - name: Upload Artifact Release Android
        uses: actions/upload-artifact@v2
        with:
          name: android-apk-release
          path: '**/*.apk'
          
          
          
#       - name: Install Pod Dependencies (IOS)
#         run: cd ./ios && pod install && cd ..       
#       - name: Build iOS (debug)
#         run: "xcodebuild \ -workspace ios/HelloReactNative.xcworkspace \ -scheme HelloReactNative \ clean archive \ -sdk iphoneos \ -configuration Debug \ -UseModernBuildSystem=NO \ -archivePath $PWD/HelloReactNative \ CODE_SIGNING_ALLOWED=NO"
#         env: 
#           DEFAULT_BRANCH: main
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
